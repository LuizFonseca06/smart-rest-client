# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Rafael Henter
# This file is distributed under the same license as the Smart Rest Client
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Smart Rest Client 0.2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-01 13:34-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/index.rst:2
msgid "Smart Rest Client"
msgstr ""

#: ../../source/index.rst:4
msgid ""
"Smart API Client is an Wrapper to perform requests to Rest APIs using "
"objects to request endpoints and their methods"
msgstr ""
"Smart API Client é um Wrapper para realizar solicitações para Rest APIs usando"
"objetos para solicitar endpoints e seus métodos"

#: ../../source/index.rst:8
msgid "User Guide"
msgstr "Guia do Usuário"

#: ../../source/example.rst:2
msgid "Base Settings"
msgstr "Configurações Basicas"

#: ../../source/example.rst:4
msgid ""
"Create a clients.py file in the core folder of your project, if you "
"haven't, created it within your project folder to be simple to be "
"imported from anywhere in the project with the following content:"
msgstr ""
"Crie um arquivo clients.py em alguma pasta nucleo do seu projeto, caso "
"não tenha, crie dentro da sua pasta do projeto para ficar mais simples de"
" ser importado de qualquer lugar do projeto com o seguinte conteúdo:"

#: ../../source/example.rst:43
msgid ""
"The name of this variable will be the name of the client that you can use"
" throughout your project"
msgstr ""
"O nome dessa variável será o nome do cliente que será importado para cada"
" projeto"

#: ../../source/example.rst:44
msgid ""
"It is recommended that the production use a set of configurations without"
" configurations.py to change the simple way or the name of the API "
"without the need to create several."
msgstr ""
"É recomendável que o nome venha de uma constante no arquivo settings.py, "
"e se possível ser até uma variável de ambiente"

#: ../../source/example.rst:45
msgid ""
"In our case, we have the option of \"production\" and \"localhost\", the "
"factory generates the customer according to the name used and the "
"parameters identified in it"
msgstr ""
"No nosso caso, temos a opção de \"produção\"e \"localhost\", o"
"a fábrica gera o cliente de acordo com o nome utilizado e o"
"parâmetros identificados nele"

#: ../../source/example.rst:48
msgid ""
"Let's imagine which client is located in a folder called clients on "
"project folder (folder containing the settings.py file)"
msgstr ""
"Vamos imaginar que o cliente esta em uma pasta dentro da pasta do projeto"
" (pasta que contém o arquivo settings.py)"

#: ../../source/example.rst:51
msgid "Example"
msgstr "Exemplo"

#: ../../source/example.rst:53
msgid "Import the api_client from your client.py file"
msgstr "Importe o api_client do seu arquivo client.py"

#: ../../source/index.rst:21
msgid "Development"
msgstr "Desenvolvimento"

#: ../../source/index.rst:33
msgid "Downloads"
msgstr ""

#: ../../source/index.rst:35
msgid ""
"`PDF <https://readthedocs.org/projects/smart-rest-"
"client/downloads/pdf/latest/>`_"
msgstr ""

#: ../../source/index.rst:37
msgid ""
"`Epub <https://readthedocs.org/projects/smart-rest-"
"client/downloads/epub/latest/>`_"
msgstr ""

#: ../../source/index.rst:41
msgid "Changelog"
msgstr ""

#~ msgid ""
#~ "The Smart Rest Client is an API"
#~ " response wrapper, which allows you "
#~ "to iterate through the API as if"
#~ " they were using a local model "
#~ "/ object in your project. Whether "
#~ "through the direct customer in an "
#~ "FBV or using personalized CBV (class-"
#~ "based displays), this framework tries to"
#~ " make this communication as easy as"
#~ " possible"
#~ msgstr ""
#~ "O Smart Rest Client é um wrapper"
#~ " de resposta da API, que permite "
#~ "iterar com a API como se eles "
#~ "estivesse usando um modelo/objeto local "
#~ "em seu projeto. Seja por meio do"
#~ " cliente direto em uma FBV ou "
#~ "usando CBV personalizada (exibições baseadas"
#~ " em classe), este framework tenta "
#~ "facilitar ao máximo esta comunicação"

#~ msgid "Smart Rest Client Documentation"
#~ msgstr "Documentação do Smart Rest Client"

#~ msgid ""
#~ "The Smart Rest Client is an API"
#~ " response wrapper, which translates "
#~ "Django's native calls when using a "
#~ "view to a particular REST API. "
#~ "Whether using the API client directly"
#~ " in a FBV (Function-based View) "
#~ "or using CBV (Class-based View), "
#~ "this library makes this communication as"
#~ " transparent and easy as possible"
#~ msgstr ""
#~ "O Smart Rest Client é um wrapper"
#~ " de resposta da API, que traduz "
#~ "as chamadas nativas do Django ao "
#~ "usar uma view para a uma "
#~ "determinada API REST.Seja usando do "
#~ "cliente da API diretamente em um "
#~ "FBV (Function-based View) ou usando "
#~ "CBV (Class-based View), essa biblioteca"
#~ " tornar essa comunicação o mais "
#~ "transparente e fácil o possível"

#~ msgid "Some reasons to use the **Smart Rest Client**"
#~ msgstr "Alguns motivos para se usar o **Smart Rest Client**"

#~ msgid ""
#~ "If you work with microservices with "
#~ "APIs in multiple locations and want "
#~ "to continue using Django as a "
#~ "WebApp with the same capabilities to "
#~ "render data as if you were using"
#~ " native models"
#~ msgstr ""
#~ "Se você trabalha com microsserviços com"
#~ " APIs em vários locais e deseja "
#~ "continuar usando o Django como um "
#~ "WebApp com os mesmos recursos para "
#~ "renderizar os dados como se estivesse"
#~ " usando os modelos nativos"

#~ msgid ""
#~ "You want to separate your Django "
#~ "project to let one of them only"
#~ " with the API with DRF and the"
#~ " other as a WebApp with Templates "
#~ "(HTML), CSS, JS instead of using "
#~ "some JS frontend (ReactJS, AngularJS, "
#~ "etc.)"
#~ msgstr ""
#~ "Você quer separar o seu projeto "
#~ "Django para deixar um deles somente "
#~ "com a API com DRF e outro "
#~ "como um WebApp com Templates(HTML), CSS,"
#~ " JS ao invés de usar algum "
#~ "frontend JS (ReactJS, AngularJS, etc)"

#~ msgid ""
#~ "You want to use a third party "
#~ "API to list, create and change "
#~ "using the django template system"
#~ msgstr ""
#~ "Você deseja usar uma API de "
#~ "terceiros para listar, criar e alterar"
#~ " usando o sistema de templates do "
#~ "django"

#~ msgid "Quickstart"
#~ msgstr ""

#~ msgid ""
#~ "Add this settings in your project "
#~ "``settings.py`` file to access your API"
#~ msgstr ""
#~ "Adicione esta configuração no seu "
#~ "projeto no arquivo ``settings.py`` para "
#~ "acessar a sua API "

#~ msgid ""
#~ "The details of the configuration will"
#~ " be better explained in the "
#~ "documentation"
#~ msgstr "Os detalhes da configuração serão melhor explicados na documentação*"

#~ msgid ""
#~ "It is recommended that the name "
#~ "comes from a constant in the "
#~ "settings.py file, and if possible it "
#~ "can even be an environment variable."
#~ msgstr ""

#~ msgid ""
#~ "The client will generate a user-"
#~ "friendly structure for each endpoint. "
#~ "Example with the endpoint */order/orders/*:"
#~ msgstr ""
#~ "O cliente irá gerar uma estrutura "
#~ "amigavel para cada endpoing. Exemplo com"
#~ " o endpoint */order/orders/*:"

#~ msgid "In your template you can use the forms and pagination snippets. E.g:"
#~ msgstr ""
#~ "No seu template você pode usar os"
#~ " snippets de formulários e de "
#~ "paginação. Ex:"

#~ msgid "Example using Bootstrap Styles(CSS)"
#~ msgstr "Exemplo usando estilos (CSS) do Bootstrap"

#~ msgid ""
#~ "includes/form_search.html: Form with search "
#~ "input. This ``include`` support placeholder"
#~ " too."
#~ msgstr ""
#~ "includes/form_search.html: Formulário com input "
#~ "de busca. Este ``include`` suporta "
#~ "placeholder tambem."

#~ msgid ""
#~ "includes/form_paginate_by.html: Select form to "
#~ "choose how many elements the page "
#~ "will be paginate. Ex: by (20, 40,"
#~ " 60, etc ...)"
#~ msgstr ""
#~ "includes/form_paginate_by.html: Formulario de Select"
#~ " para escolher com quantos elementos "
#~ "a pagina será paginadaEx: por (20, "
#~ "40, 60, etc ...)"

#~ msgid ""
#~ "includes/list_paginator.html: Block with pagination"
#~ " elements with the number of pages"
#~ " buttons, previous and next"
#~ msgstr ""
#~ "includes/list_paginator.html: Bloco com os "
#~ "elementos de paginação com os butões "
#~ "de número de paginas, anterior e "
#~ "proximo"

#~ msgid "What does that mean?"
#~ msgstr "O que isso quer dizer?"

#~ msgid ""
#~ "That the API Client will always "
#~ "generate the structure according to the"
#~ " names of their endpoints"
#~ msgstr ""
#~ "Que o API Cliente sempre gerará a"
#~ " estutura de acordo os nomes dos "
#~ "seus endpoints"

#~ msgid ""
#~ "`PDF <https://readthedocs.org/projects/django-api-"
#~ "client/downloads/pdf/latest/>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Epub <https://readthedocs.org/projects/django-api-"
#~ "client/downloads/epub/latest/>`_"
#~ msgstr ""

#~ msgid ""
#~ "The API Client is an Wrapper to"
#~ " perform requests to Rest APIs using"
#~ " objects to request endpoints and "
#~ "their methods"
#~ msgstr ""

#~ msgid ""
#~ "Now we are going to list the "
#~ "data using the normal Django template"
#~ " system"
#~ msgstr "Agora vamos listar os dados usando o sistema padrão do Django "

